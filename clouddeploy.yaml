# POSTGRES CONFIG
# gcloud compute disks create --size 200GB postgres-disk
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: dashboard-config
# data:
#   WS_SECRET: 'eth-net-stats-secret'
# ---
apiVersion: v1
kind: Service
metadata:
  name: node1-public
  labels:
    app: node1-deployment
    tier: backend1
spec:
  type: NodePort
  ports:
  - port: 8501
    targetPort: 8501
  selector:
    app: node1-deployment
    tier: backend1
---
apiVersion: v1
kind: Service
metadata:
  name: node1
  labels:
    app: node1-deployment
    tier: backend1
spec:
  type: NodePort
  ports:
  - port: 30311
    targetPort: 30311
  selector:
    app: node1-deployment
    tier: backend1
---
# ethereum DEPLOY
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node1-deployment
  labels:
    app: node1-deployment
    tier: backend1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node1-deployment
      tier: backend1
  template:
    metadata:
      labels:
        app: node1-deployment
        tier: backend1
    spec:
      containers:
      - name: node1-deployment
        image: gcr.io/utils-harpangell/node1
        env:
            - name: "NODE1_PWD"
              value: "/home/pwd/password.txt"
        volumeMounts:
            - name: "node1-ethsdk"
              mountPath: "/home/pwd"
            # - name: node11-pv
            #   mountPath: /home/ethereum1/geth
        imagePullPolicy: Always
        ports:
        - containerPort: 30311
        command: [
          "geth",
          "--datadir", "/home/ethereum",
          "--syncmode", "full",
          "--port", "30311",
          "--rpc",
          "--rpcaddr", "0.0.0.0",
          "--rpcport", "8501",
          "--rpccorsdomain", "*",
          "--rpcvhosts", "*",
          "--rpcapi", "eth,web3,personal,net",
          # "--ws",
          # "--wsaddr", "localhost",
          # "--wsapi", "eth,web3,personal,net",
          # "--wsorigins", "*",
          "--networkid", "32414",
          "--miner.gasprice", "0",
          "--unlock", "0xef46e8cafe1b76c92c13824cea5e2e7b1301284e",
          "--password", "pwd/password.txt",
          "--mine",
          "--allow-insecure-unlock",
          "--nodiscover"
        ]
      volumes:
        - name: "node1-ethsdk"
          secret:
            secretName: "node1-key"
        # - name: node11-pv
        #   persistentVolumeClaim:
        #     claimName: node11-claim
---
apiVersion: v1
kind: Service
metadata:
  name: node2-public
  labels:
    app: node1-deployment
    tier: backend2
spec:
  type: NodePort
  ports:
  - port: 8502
    targetPort: 8502
  selector:
    app: node2-deployment
    tier: backend2
---
apiVersion: v1
kind: Service
metadata:
  name: node2
  labels:
    app: node2-deployment
    tier: backend2
spec:
  type: NodePort
  ports:
  - port: 30312
    targetPort: 30312
  selector:
    app: node2-deployment
    tier: backend2
---
# ethereum DEPLOY
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node2-deployment
  labels:
    app: node2-deployment
    tier: backend2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node2-deployment
      tier: backend2
  template:
    metadata:
      labels:
        app: node2-deployment
        tier: backend2
    spec:
      containers:
      - name: node2-deployment
        image: gcr.io/utils-harpangell/node2
        env:
            - name: "NODE2_PWD"
              value: "/home/pwd/password.txt"
        volumeMounts:
            - name: "node2-ethsdk"
              mountPath: /home/pwd
            # - name: node22-pv
            #   mountPath: /home/ethereum2/geth
        imagePullPolicy: Always
        ports:
        - containerPort: 30312
        command: [
          "geth",
          "--datadir", "/home/ethereum",
          "--syncmode", "full",
          "--port", "30312",
          "--rpc",
          "--rpcaddr", "0.0.0.0",
          "--rpcport", "8502",
          "--rpccorsdomain", "*",
          "--rpcvhosts", "*",
          "--rpcapi", "eth,web3,personal,net",
          # "--ws",
          # "--wsaddr", "localhost",
          # "--wsapi", "eth,web3,personal,net",
          # "--wsorigins", "*",
          "--networkid", "32414",
          "--miner.gasprice", "0",
          "--unlock", "0x66fe3576ed1ea66f21597e7a5f0004ef119b7ce6",
          "--password", "pwd/password.txt",
          "--mine",
          "--allow-insecure-unlock",
          "--nodiscover"
        ]
      volumes:
        - name: "node2-ethsdk"
          secret:
            secretName: "node2-key"
        # - name: node22-pv
        #   persistentVolumeClaim:
        #     claimName: node22-claim
# ---
# # ethereum DEPLOY
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: ethnet-deployment
#   labels:
#     app: ethnet-deployment
#     tier: backend3
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: ethnet-deployment
#       tier: backend3
#   template:
#     metadata:
#       labels:
#         app: ethnet-deployment
#         tier: backend3
#     spec:
#       containers:
#       - name: ethnet-deployment
#         image: gcr.io/utils-harpangell/ethnet
#         imagePullPolicy: Always
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: dashboard
#   labels:
#     app: dashboard-deployment
#     tier: frontend
# spec:
#   type: NodePort
#   ports:
#   - port: 3000
#     protocol: TCP
#     targetPort: 3000
#   selector:
#     app: dashboard-deployment
#     tier: frontend
# ---
# # API DEPLOY
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: dashboard-deployment
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#         app: dashboard-deployment
#         tier: frontend
#   template:
#     metadata:
#       labels:
#         app: dashboard-deployment
#         tier: frontend
#     spec:
#       containers:
#       - name: dashboard-deployment
#         image: gcr.io/utils-harpangell/dashboard
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 3000
#         envFrom:
#         - configMapRef:
#             name: dashboard-config
